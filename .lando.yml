name: fldrupal-lando
recipe: pantheon
config:
  framework: drupal8
  site: fldrupal-lando
  id: ba6b2339-260a-4e3f-a2d1-de2f4ea6547d
  xdebug: false

services:
  node:
    type: node:16
    globals:
      gulp-cli: latest
  chrome:
    type: compose
    services:
      image: justinribeiro/chrome-headless:stable
      command: "exec google-chrome --headless --disable-gpu --remote-debugging-address=0.0.0.0 --remote-debugging-port=9222 --no-sandbox > /dev/null 2>&1 &"
      ports:
        - "9222:9222"
      user: chrome

  appserver:
    overrides:
      environment:
        COMPOSER_PROCESS_TIMEOUT: 600

tooling:
  composer:
    env:
      COMPOSER_PROCESS_TIMEOUT: 600
    service: appserver
    cmd: composer
  phpcs:
    service: appserver
    cmd: /app/drupal/vendor/bin/phpcs --standard=/app/drupal/phpcs.xml
  phpcbf:
    service: appserver
    cmd: /app/drupal/vendor/bin/phpcbf --standard=/app/drupal/phpcs.xml

  test:
    description: Run PHPUnit tests
    cmd:
      - node: cd /my/theme/path && npm install && npm run build
      - appserver: echo && tput setaf 2 && echo "Running PHPUnit tests..." && tput sgr 0
      - appserver: cd /app && ./vendor/bin/phpunit -c phpunit.xml

  install:
    description: Install Composer dependencies
    service: appserver
    env:
      # The Drupal root is the directory containing your composer.json. Change this if Drupal is in a subdirectory of your project.
      DRUPAL_ROOT: .
      COMPOSER_DISCARD_CHANGES: true
      COMPOSER_PROCESS_TIMEOUT: 600
    cmd:
      - echo && tput setaf 2 && echo "Preparing Drupal..." && tput sgr 0
      - terminus pull --site=fldrupal-lando --env=dev --code=none --database=dev --files=dev --element=database --element=files --no-interaction
      - cd "/app/$DRUPAL_ROOT" && composer install --no-interaction
      - cd "/app/$DRUPAL_ROOT" && drush deploy

    # Use `lando db-reset` to reset your database and apply the most recent config and database updates from code and
    # config. This works by dropping your current database, then importing the most recent database dump from the project
    # root. It then performs a common routine including using Drush to perform database updates, rebuild caches, and
    # import the latest config from the code base.
    db-reset:
      description: Reset the Drupal environment
      service: appserver
      env:
        # The Drupal root is the directory containing your composer.json. Set this if Drupal is in a subdirectory of your project.
        DRUPAL_ROOT: .
      cmd:
        - database: cd /app && /helpers/sql-import.sh $(ls -t *.sql.zip -t *.sql.gz -t *.mysql.gz | head -n1)
        - appserver: echo && tput setaf 2 && echo "Checking for Drupal schema updates..." && tput sgr 0
        - appserver: cd "/app/$DRUPAL_ROOT" && drush deploy
        - appserver: cd "/app/$DRUPAL_ROOT" && drush user:login

    lock-update:
      description: Reset and update the composer.lock file to quickly resolve merge conflicts.
      service: appserver
      env:
        DRUPAL_ROOT: .
        COMPOSER_PROCESS_TIMEOUT: 600
      cmd:
        - git diff --check --exit-code -- "/app/$DRUPAL_ROOT/composer.json" || { echo "Fix merge conflicts in composer.json before executing this command." && exit 1; }
        - git checkout HEAD -- "/app/$DRUPAL_ROOT/composer.lock"
        - cd "/app/$DRUPAL_ROOT" && composer update --lock -W
        - git add "/app/$DRUPAL_ROOT/composer.lock"
        - echo && echo composer.lock has been updated. Continue a git merge or rebase with $(tput setaf 3)git merge --continue$(tput sgr 0) or $(tput setaf 3)git rebase --continue$(tput sgr 0).

      xdebug:
        service: appserver
        description: Enable Xdebug.
        user: root
        cmd:
          - docker-php-ext-enable xdebug && kill -USR2 $(pgrep -o php-fpm) || /etc/init.d/apache2 reload
          - tput setaf 2 && echo "Xdebug On" && tput sgr 0 && echo

      xdebug-off:
        service: appserver
        description: Disable Xdebug.
        user: root
        cmd:
          - rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && kill -USR2 $(pgrep -o php-fpm) || /etc/init.d/apache2 reload
          - tput setaf 1 && echo "Xdebug Off" && tput sgr 0 && echo

      drupal-update:
        description: Update a Drupal module by machine name or pass no module name to update Drupal core.
        service: appserver
        env:
          DRUPAL_ROOT: .
          DRUPAL_PROJECT: core-recommended
          COMPOSER_DISCARD_CHANGES: true
          COMPOSER_PROCESS_TIMEOUT: 600
        cmd:
          - bash -c 'MODULE=$DRUPAL_PROJECT; test ${!#} != bash && MODULE=${!#}; cd "/app/$DRUPAL_ROOT" && composer update drupal/$MODULE --with-dependencies && true || false'
          - cd "/app/$DRUPAL_ROOT" && drush updb -y --no-cache-clear && drush cr && drush cex -y && true || false
          - cd /app && git status && true || false- echo && echo composer.lock has been updated. Continue a git merge or rebase with $(tput setaf 3)git merge --continue$(tput sgr 0) or $(tput setaf 3)git rebase --continue$(tput sgr 0).


